{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.08390ffbe946dbd124c3.hot-update.js","sources":["webpack:///./components/pixelGrid.js"],"sourcesContent":["import { getDimensions } from \"../hooks/getDimensions\";\r\nimport \"../styles/pixelGrid.css\";\r\nimport getMousePos from \"../hooks/getMousePosition\";\r\n\r\nexport default function PixelGrid() {\r\n    const dimensions = getDimensions();\r\n    let canvasDim = {x: dimensions.width / 2, y: dimensions.height / 2};\r\n\r\n    const mousePos = getMousePos();\r\n    let gridPoints = convertPositionToGrid(mousePos, canvasDim, 4);\r\n\r\n    return (\r\n        <div className=\"centered\">\r\n            <p>Window's dimensions are {dimensions.width} by {dimensions.height}</p>\r\n            <p>Mouse was last seen on canvas at point: ({mousePos.x} , {mousePos.y})</p>\r\n            <p>Last active gridpoint based on position: ({gridPoints.x} , {gridPoints.y})</p>\r\n            <canvas className=\"pixelGrid\" id=\"pixelGrid\" width={canvasDim.x} height={canvasDim.y}></canvas>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction convertPositionToGrid(pos, dimensions, size) {\r\n    let scale = dimensions.x / size / 2;\r\n\r\n    return {\r\n        x: convert(pos.x, scale),\r\n        y: convert(pos.y, scale)\r\n    };\r\n}\r\n\r\nfunction convert(val, scale) {\r\n    return Math.ceil(val / scale);\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}