{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\nexport default function getMousePos() {\n  const {\n    0: position,\n    1: setPosition\n  } = useState({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {}, []);\n  return position;\n}\n\nfunction init(setPosition) {\n  function handleMouseMove(canvas, evt) {\n    let rect = canvas.getBoundingClientRect();\n    setPosition({\n      x: evt.clientX - rect.left,\n      y: evt.clientY - rect.top\n    });\n  }\n\n  let canvas = document.getElementById(\"pixelGrid\");\n  canvas.addEventListener(\"mousemove\", handleMouseMove(canvas, evt));\n}","map":{"version":3,"sources":["C:/Users/jonbe/Desktop/Personal/Pixel_Art_Maker/hooks/getMousePosition.js"],"names":["useState","useEffect","loadGetInitialProps","getMousePos","position","setPosition","x","y","init","handleMouseMove","canvas","evt","rect","getBoundingClientRect","clientX","left","clientY","top","document","getElementById","addEventListener"],"mappings":"AAAA,SAASA,QAAT,EAAoBC,SAApB,QAAqC,OAArC;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA,eAAe,SAASC,WAAT,GAAuB;AAClC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC;AAACM,IAAAA,CAAC,EAAE,CAAJ;AAAOC,IAAAA,CAAC,EAAE;AAAV,GAAD,CAAxC;AAEAN,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAAT;AAEA,SAAOG,QAAP;AACH;;AAED,SAASI,IAAT,CAAcH,WAAd,EAA2B;AAEvB,WAASI,eAAT,CAAyBC,MAAzB,EAAiCC,GAAjC,EAAsC;AAClC,QAAIC,IAAI,GAAGF,MAAM,CAACG,qBAAP,EAAX;AACAR,IAAAA,WAAW,CAAC;AACRC,MAAAA,CAAC,EAAEK,GAAG,CAACG,OAAJ,GAAcF,IAAI,CAACG,IADd;AAERR,MAAAA,CAAC,EAAEI,GAAG,CAACK,OAAJ,GAAcJ,IAAI,CAACK;AAFd,KAAD,CAAX;AAIH;;AAED,MAAIP,MAAM,GAAGQ,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAb;AACAT,EAAAA,MAAM,CAACU,gBAAP,CAAwB,WAAxB,EAAqCX,eAAe,CAACC,MAAD,EAASC,GAAT,CAApD;AACH","sourcesContent":["import { useState , useEffect } from 'react';\r\nimport { loadGetInitialProps } from 'next/dist/next-server/lib/utils';\r\n\r\nexport default function getMousePos() {\r\n    const [position, setPosition] = useState({x: 0, y: 0});\r\n\r\n    useEffect(() => {}, []);\r\n\r\n    return position;\r\n}\r\n\r\nfunction init(setPosition) {\r\n\r\n    function handleMouseMove(canvas, evt) {\r\n        let rect = canvas.getBoundingClientRect();\r\n        setPosition({\r\n            x: evt.clientX - rect.left,\r\n            y: evt.clientY - rect.top\r\n        });\r\n    }\r\n\r\n    let canvas = document.getElementById(\"pixelGrid\");\r\n    canvas.addEventListener(\"mousemove\", handleMouseMove(canvas, evt));\r\n}"]},"metadata":{},"sourceType":"module"}